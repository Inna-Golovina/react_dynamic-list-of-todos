{"version":3,"sources":["components/TodoList/TodoList.jsx","types.js","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","PropTypes","arrayOf","shape","id","number","isRequired","userId","title","string","completed","bool","func","state","titleSearch","selectedTodos","this","props","todos","chooseUser","toggleStatus","filteredTodos","filter","todo","toLowerCase","includes","className","type","placeholder","onChange","target","setState","value","name","map","key","ClassNames","checked","readOnly","onClick","React","Component","request","url","fetch","then","response","ok","Error","status","statusText","json","result","data","getUsers","CurrentUser","user","prevProps","clearUser","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cd1edf1.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport ClassNames from 'classnames';\nimport { TodoListType } from '../../types';\n\nexport class TodoList extends React.Component {\n  state = {\n    titleSearch: '',\n    selectedTodos: '',\n  }\n\n  render() {\n    const { todos, chooseUser, toggleStatus } = this.props;\n    const { selectedTodos, titleSearch } = this.state;\n    let filteredTodos = todos.filter(todo => todo.title\n      .toLowerCase()\n      .includes(titleSearch.toLowerCase()));\n\n    if (selectedTodos === 'active') {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    }\n\n    if (selectedTodos === 'completed') {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <form>\n          <input\n            className=\"TodoList__list-input\"\n            type=\"text\"\n            placeholder=\"Search todo\"\n            onChange={({ target }) => {\n              this.setState({ titleSearch: target.value });\n            }}\n          />\n\n          <select\n            className=\"TodoList__list-select\"\n            name=\"select\"\n            value={selectedTodos}\n            onChange={({ target }) => (\n              this.setState({ selectedTodos: target.value })\n            )}\n          >\n            <option value=\"\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </form>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(({ id, title, completed, userId }) => (\n              <li\n                key={id}\n                className={ClassNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !completed,\n                    'TodoList__item--checked': completed,\n                  },\n                )}\n              >\n\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={completed}\n                    onChange={() => toggleStatus(id)}\n                    readOnly\n                  />\n                  <p>{title}</p>\n                </label>\n\n                <button\n                  className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n                  type=\"button\"\n                  onClick={() => chooseUser(userId)}\n                >\n                  User&nbsp;#\n                  {' '}\n                  {`${userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = TodoListType;\n","import PropTypes from 'prop-types';\n\nexport const TodoListType = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired).isRequired,\n  chooseUser: PropTypes.func.isRequired,\n  toggleStatus: PropTypes.func.isRequired,\n};\n\nexport const CurrentUserType = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = `https://mate-api.herokuapp.com`;\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\n\nexport const getTodos = () => request('/todos');\nexport const getUsers = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport { CurrentUserType } from '../../types';\nimport { getUsers } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    getUsers(this.props.userId)\n      .then(user => this.setState({\n        user,\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    getUsers(this.props.userId).then((user) => {\n      if (!user) {\n        this.setState({\n          user: {},\n        });\n      }\n\n      this.setState({ user });\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { userId, clearUser } = this.props;\n\n    if (!user) {\n      return 'No user';\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${userId}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <div className=\"button__holder\">\n          <h2> Clear &rarr;</h2>\n          <button\n            type=\"button\"\n            className=\"plus\"\n            onClick={clearUser}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = CurrentUserType;\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos().then((todos) => {\n      this.setState({\n        todos: todos.filter(todo => todo.id && todo.userId\n          && todo.title && todo.completed !== null),\n      });\n    });\n  }\n\n  chooseUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  toggleStatus = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            chooseUser={this.chooseUser}\n            toggleStatus={this.toggleStatus}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}